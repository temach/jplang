# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# see: https://www.selenium.dev/documentation/webdriver/waits/

class TestFulltestcase():
  def setup_method(self, method):
    self.options = webdriver.FirefoxOptions()
    self.options.headless = True

    self.driver = webdriver.Firefox(options=self.options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_fulltestcase(self):
    # Test name: full-test-case
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://moonspeak.test/")

    time.sleep(10)

    # 2 | setWindowSize | 550x691 | 
    self.driver.set_window_size(550, 691)
    # 3 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 4 | click | css=.addFeature | 
    self.driver.find_element(By.CSS_SELECTOR, ".addFeature").click()
    # 5 | click | css=.featureIcon:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".featureIcon:nth-child(1)").click()
    # 6 | click | css=.featureIcon:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, ".featureIcon:nth-child(2)").click()
    # 7 | click | css=.featureIcon:nth-child(3) | 
    self.driver.find_element(By.CSS_SELECTOR, ".featureIcon:nth-child(3)").click()
    # 8 | click | css=.featureIcon:nth-child(4) | 
    self.driver.find_element(By.CSS_SELECTOR, ".featureIcon:nth-child(4)").click()
    # 9 | click | css=.addFeature | 
    self.driver.find_element(By.CSS_SELECTOR, ".addFeature").click()
 
    time.sleep(10)

    # 10 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 11 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 12 | click | css=g:nth-child(7) > rect | 
    self.driver.find_element(By.CSS_SELECTOR, "g:nth-child(7) > rect").click()
    # 13 | click | css=g:nth-child(5) > rect | 
    self.driver.find_element(By.CSS_SELECTOR, "g:nth-child(5) > rect").click()
    # 14 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 15 | click | css=.row:nth-child(3) > span:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(3) > span:nth-child(1)").click()
    # 16 | click | css=.row:nth-child(4) > span:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(4) > span:nth-child(1)").click()
    # 17 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 18 | selectFrame | index=3 | 
    self.driver.switch_to.frame(3)
    # 19 | click | css=.row:nth-child(4) > span:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(4) > span:nth-child(1)").click()
    # 20 | click | css=.row:nth-child(2) > span:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > span:nth-child(1)").click()
    # 21 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 22 | selectFrame | index=2 | 
    self.driver.switch_to.frame(2)
    # 23 | click | css=.row:nth-child(3) > span:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(3) > span:nth-child(1)").click()
    # 24 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 25 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 26 | click | css=button | 
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
  
